{"version":3,"sources":["components/Player.js","components/IncButton.js","components/DirectionButton.js","App.js","serviceWorker.js","index.js"],"names":["Player","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","textP","React","createRef","setAnimate","prevProps","_this$props","speed","animation","current","animate","duration","iterations","Infinity","_this$props2","player","text","backgroundColor","color","height","fontSize","backStyle","overflow","position","concat","react_default","a","createElement","style","ref","width","margin","lineHeight","textAlign","Component","defaultProps","transform","IncButton","prop","name","increase","decrease","buttonStyle","className","type","onClick","DirectionButton","keys","direction","handleChange","Radios","map","el","FormControlLabel_default","key","value","control","Radio_default","label","FormControl_default","component","FormLabel_default","RadioGroup_default","onChange","DEFAULT_PLAYER_HEIGHT","DEFAULT_STATE","textState","colorState","App","getDefaultPlayerHeight","getIncButtunList","lowLimit","highLimit","reverse","getAnimation","_this$state","state","getAnimationList","arguments","length","undefined","heightMiddle","up","offset","down","right","left","updateAnimation","setState","currentAnimation","directionChange","event","target","textChange","colorChange","hex","downloadJSON","newValue","assign","mfp_type","data","filename","file","Blob","saveAs","download","JSON","stringify","objectSpread","setStateFromJSON","forEach","prototype","hasOwnProperty","getNewState","loadJSON","files","reader","FileReader","onload","parse","result","readAsText","param","url","URL","window","location","href","searchParams","get","indexOf","electron","navigator","userAgent","toLowerCase","parseInt","getNewStateFromURL","isPlayerMode","isElectron","bt","prev","defineProperty","_this2","_this$state2","playerProps","btState","IncButtonComponents","components_IncButton","components_Player","String","Button_default","variant","lib","onChangeComplete","TextField_default","fullWidth","components_DirectionButton","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"yTAGMA,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQC,IAAMC,YAFFT,mFAMjBG,KAAKO,wDAGYC,GACbR,KAAKJ,QAAUY,GACjBR,KAAKO,kDAII,IAAAE,EAIPT,KAAKJ,MAFPc,EAFSD,EAETC,MACAC,EAHSF,EAGTE,UAGFX,KAAKI,MAAMQ,QAAQC,QAAQF,EAAW,CACpCG,SAAkB,IAARJ,EACVK,WAAYC,uCAIP,IAAAC,EAQHjB,KAAKJ,MANPsB,EAFKD,EAELC,OACAC,EAHKF,EAGLE,KACAC,EAJKH,EAILG,gBACAC,EALKJ,EAKLI,MACAC,EANKL,EAMLK,OACAC,EAPKN,EAOLM,SAGIC,EAAY,CAChBJ,kBACAC,QACAI,SAAU,SACVC,SAAU,WACVJ,OAAM,GAAAK,OAAKL,EAAL,QAMR,OAJIJ,UACKM,EAAUJ,gBAIjBQ,EAAAC,EAAAC,cAAA,OACEC,MAAOP,GAEPI,EAAAC,EAAAC,cAAA,KACEE,IAAKhC,KAAKI,MACV2B,MAAO,CACLL,SAAU,WACVO,MAAO,OACPX,OAAQ,OACRY,OAAQ,IACRC,WAAY,OACZC,UAAW,SACXb,SAAQ,GAAAI,OAAKJ,EAAL,SAGTJ,WAjEUkB,aAmFrB1C,EAAO2C,aAAe,CACpB3B,UAAW,CACT,CAAE4B,UAAW,oBACb,CAAEA,UAAW,uBAIF5C,QCtDA6C,MArCf,SAAmBC,GAAM,IAErBC,EAGED,EAHFC,KACAC,EAEEF,EAFFE,SACAC,EACEH,EADFG,SAGIC,EAAc,CAClBvB,OAAQ,QACRW,MAAO,QACPC,OAAQ,OACRX,SAAU,QAGZ,OACEK,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,KAAGgB,UAAU,QAAQJ,GACrBd,EAAAC,EAAAC,cAAA,UACEgB,UAAU,gBACVC,KAAK,SACLC,QAASL,EACTZ,MAAOc,GAEN,KAEHjB,EAAAC,EAAAC,cAAA,UACEgB,UAAU,gBACVC,KAAK,SACLC,QAASJ,EACTb,MAAOc,GAEN,iGCAMI,MA1Bf,SAAyBR,GAAM,IAE3BC,EAIED,EAJFC,KACAQ,EAGET,EAHFS,KACAC,EAEEV,EAFFU,UACAC,EACEX,EADFW,aAGIC,EAASH,EAAKI,IAAI,SAAAC,GAAE,OACxB3B,EAAAC,EAAAC,cAAC0B,EAAA3B,EAAD,CAAkB4B,IAAKF,EAAIG,MAAOH,EAAII,QAAS/B,EAAAC,EAAAC,cAAC8B,EAAA/B,EAAD,MAAWgC,MAAON,MAEnE,OACE3B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACgC,EAAAjC,EAAD,CAAakC,UAAU,YACrBnC,EAAAC,EAAAC,cAACkC,EAAAnC,EAAD,CAAWkC,UAAU,SAASjB,UAAU,QAAQJ,GAChDd,EAAAC,EAAAC,cAACmC,EAAApC,EAAD,CACE6B,MAAOP,EACPe,SAAUd,GAETC,MCjBLc,EAAwB,GACxBC,EAAgB,CACpBjB,UAAW,KACXkB,UAAW,OACXC,WAAY,UACZ/C,SAAU,EACVb,MAAO,QA4QM6D,cAvNb,SAAAA,EAAY3E,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuE,IACjB1E,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyE,GAAApE,KAAAH,KAAMJ,KAyCR4E,uBAAyB,kBAAML,GA1CZtE,EA4CnB4E,iBAAmB,iBAAM,CACvB,CACE/B,KAAM,WACNgC,SAAU,EACVC,UAAW,IACXC,SAAS,GAEX,CACElC,KAAM,QACNgC,SAAU,EACVC,UAAW,IACXC,SAAS,KAvDM/E,EA2DnBgF,aAAe,WAAM,IAAAC,EACajF,EAAKkF,MAA7BxD,EADWuD,EACXvD,SAAU4B,EADC2B,EACD3B,UAClB,OAAOtD,EAAKmF,iBAAiBzD,GAAU4B,IA7DtBtD,EAgEnBmF,iBAAmB,WAAuC,IAAtCzD,EAAsC0D,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA3Bb,EAAc7C,SACrC6D,GAAgBjB,EAAwB5C,GAAY,EAE1D,MAAO,CACL8D,GAAI,CACF,CAAE9C,UAAS,cAAAZ,OAAgBwC,EAAhB,SACX,CAAE5B,UAAS,cAAAZ,OAAgByD,EAAhB,QAAoCE,OAAQ,IACvD,CAAE/C,UAAS,cAAAZ,OAAgByD,EAAhB,QAAoCE,OAAQ,IACvD,CAAE/C,UAAS,eAAAZ,OAAiBwC,EAAjB,UAEboB,KAAM,CACJ,CAAEhD,UAAS,eAAAZ,OAAiBwC,EAAjB,SACX,CAAE5B,UAAS,cAAAZ,OAAgByD,EAAhB,QAAoCE,OAAQ,IACvD,CAAE/C,UAAS,cAAAZ,OAAgByD,EAAhB,QAAoCE,OAAQ,IACvD,CAAE/C,UAAS,cAAAZ,OAAgBwC,EAAhB,UAEbqB,MAAO,CACL,CAAEjD,UAAS,oBAAAZ,OAAsByD,EAAtB,SACX,CAAE7C,UAAS,iBAAAZ,OAAmByD,EAAnB,QAAuCE,OAAQ,IAC1D,CAAE/C,UAAS,iBAAAZ,OAAmByD,EAAnB,QAAuCE,OAAQ,IAC1D,CAAE/C,UAAS,mBAAAZ,OAAqByD,EAArB,UAEbK,KAAM,CACJ,CAAElD,UAAS,mBAAAZ,OAAqByD,EAArB,SACX,CAAE7C,UAAS,iBAAAZ,OAAmByD,EAAnB,QAAuCE,OAAQ,IAC1D,CAAE/C,UAAS,iBAAAZ,OAAmByD,EAAnB,QAAuCE,OAAQ,IAC1D,CAAE/C,UAAS,oBAAAZ,OAAsByD,EAAtB,YA1FEvF,EA+FnB6F,gBAAkB,WAChB7F,EAAK8F,SAAS,CAAEC,iBAAkB/F,EAAKgF,kBAhGtBhF,EAmGnBgG,gBAAkB,SAACC,GACjBjG,EAAK8F,SAAS,CAAExC,UAAW2C,EAAMC,OAAOrC,OAAS7D,EAAK6F,kBApGrC7F,EAuGnBmG,WAAa,SAACF,GACZjG,EAAK8F,SAAS,CAAEtB,UAAWyB,EAAMC,OAAOrC,SAxGvB7D,EA2GnBoG,YAAc,SAAC5E,GACbxB,EAAK8F,SAAS,CAAErB,WAAYjD,EAAM6E,OA5GjBrG,EA+GnBsG,aAAe,WACb,IAAMC,EAAW,GACjBtG,OAAOuG,OAAOD,EAAUvG,EAAKkF,OAE7BqB,EAASE,SAAW,eACbF,EAASR,iBAlKpB,SAAkBW,EAAMC,GACtB,IAAMC,EAAO,IAAIC,KAAK,CAACH,GAAO,CAAExD,KAAM,6BACtC4D,iBAAOF,EAAMD,GAmKXI,CAFaC,KAAKC,UAALhH,OAAAiH,EAAA,EAAAjH,CAAA,GAAoBsG,GAAY,KAAM,GAEpC,eAvHEvG,EA0HnBmH,iBAAmB,SAACT,GAClB1G,EAAK8F,SApKT,SAAqBY,GACnB,IAAMH,EAAW,GAMjB,OALAtG,OAAOoD,KAAKkB,GAAe6C,QAAQ,SAACxD,GAC9B3D,OAAOoH,UAAUC,eAAehH,KAAKoG,EAAM9C,KAC7C2C,EAAS3C,GAAO8C,EAAK9C,MAGlB2C,EA6JSgB,CAAYb,GAAO1G,EAAK6F,kBA3HrB7F,EA8HnBwH,SAAW,SAACvB,GACV,IAAMW,EAAOX,EAAMC,OAAOuB,MAAM,GAEhC,GAAIb,EAAM,CACR,IAAMc,EAAS,IAAIC,WACnBD,EAAOE,OAAS,WACd,IAAMlB,EAAOM,KAAKa,MAAMH,EAAOI,QAE/B9H,EAAKmH,iBAAiBT,IAExBgB,EAAOK,WAAWnB,KAtIpB,IApDmBoB,EAoDbC,EAAM,IAAIC,IAAIC,OAAOC,SAASC,MAC9BhH,GArDa2G,EAqDUC,EAAIK,aAAaC,IAAI,UApD7C,CAAC,EAAG,IAAK,OAAQ,QAAQC,QAAQR,IAAU,GAqD1CS,EARDC,UAAUC,UAAUC,cAAcJ,QAAQ,eAAiB,EAI/C,OAMjBxI,EAAKkF,MArCT,SAA4B+C,GAC1B,IAAM1B,EAAW,GAsBjB,OApBAtG,OAAOuG,OAAOD,EAAUhC,GAExBtE,OAAOoD,KAAKkB,GAAe6C,QAAQ,SAACxD,GAClC,GAAIqE,EAAIK,aAAaC,IAAI3E,GACvB,OAAQA,GACN,IAAK,aACH2C,EAAS3C,GAAT,IAAA9B,OAAoBmG,EAAIK,aAAaC,IAAI3E,IACzC,MACF,IAAK,WAGL,IAAK,QACH2C,EAAS3C,GAAOiF,SAASZ,EAAIK,aAAaC,IAAI3E,GAAM,IACpD,MACF,QACE2C,EAAS3C,GAAOqE,EAAIK,aAAaC,IAAI3E,MAKtC2C,EAcQuC,CAAmBb,GAChCjI,EAAKkF,MAAMa,iBAAmB/F,EAAKgF,eAEnCN,EAAI2C,UAAU0B,aAAe,kBAAM1H,GACnCqD,EAAI2C,UAAU2B,WAAa,kBAAMP,GAEjCzI,EAAK4E,mBAAmBwC,QAAQ,SAAC6B,GAAO,IAEpCpG,EAIEoG,EAJFpG,KACAgC,EAGEoE,EAHFpE,SACAC,EAEEmE,EAFFnE,UAIIhC,EAAW,WAAM,IACLoG,EAASlJ,EAAKkF,MAArBrC,GACH0D,EAAW2C,EAAOpE,EAAY,EAAIoE,EAAO,EAAIpE,EACnD9E,EAAK8F,SAAL7F,OAAAkJ,EAAA,EAAAlJ,CAAA,GAAiB4C,EAAO0D,GAAYvG,EAAK6F,kBAGrC9C,EAAW,WAAM,IACLmG,EAASlJ,EAAKkF,MAArBrC,GACH0D,EAAW2C,EAAOrE,EAAW,EAAIqE,EAAO,EAAIrE,EAClD7E,EAAK8F,SAAL7F,OAAAkJ,EAAA,EAAAlJ,CAAA,GAAiB4C,EAAO0D,GAAYvG,EAAK6F,kBAXvCoD,EADFlE,SAgBAL,EAAI2C,UAAJ,GAAAvF,OAAiBe,EAAjB,QAA8BE,EAC9B2B,EAAI2C,UAAJ,GAAAvF,OAAiBe,EAAjB,QAA8BC,IAE9B4B,EAAI2C,UAAJ,GAAAvF,OAAiBe,EAAjB,QAA8BC,EAC9B4B,EAAI2C,UAAJ,GAAAvF,OAAiBe,EAAjB,QAA8BE,KArCjB/C,wEA4IV,IAAAoJ,EAAAjJ,KAAAkJ,EAMHlJ,KAAK+E,MAJPa,EAFKsD,EAELtD,iBACAzC,EAHK+F,EAGL/F,UACAkB,EAJK6E,EAIL7E,UACAC,EALK4E,EAKL5E,WAEI6E,EAAc,GAEpBnJ,KAAKyE,mBAAmBwC,QAAQ,SAAC6B,GAAO,IAC9BpG,EAASoG,EAATpG,KACQ0G,EAAYH,EAAKlE,MAAxBrC,GACTyG,EAAYzG,GAAQ0G,IAGtB,IAAMC,EAAsBrJ,KAAKyE,mBAAmBnB,IAAI,SAAAwF,GAAE,OAAKlH,EAAAC,EAAAC,cAACwH,EAAD,CAC7D7F,IAAKqF,EAAGpG,KACRA,KAAMoG,EAAGpG,KACTI,UAAWgG,EAAGpG,KACdC,SAAU4B,EAAI2C,UAAJ,GAAAvF,OAAiBmH,EAAGpG,KAApB,QACVE,SAAU2B,EAAI2C,UAAJ,GAAAvF,OAAiBmH,EAAGpG,KAApB,YAIZ,OACEd,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,OACblB,EAAAC,EAAAC,cAACyH,EAADzJ,OAAAuG,OAAA,CACEvD,UAAU,SACV5B,OAAQlB,KAAK4I,eACbzH,KAAMkD,EACNjD,gBAAgB,QAChBC,MAAOiD,EACPhD,OAAQkI,OAAOrF,GACfhB,UAAU,OACVxC,UAAWiF,GACPuD,IAELnJ,KAAK4I,eAAkBhH,EAAAC,EAAAC,cAAA,YACtBF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAOiB,KAAK,OAAOmB,SAAUlE,KAAKqH,WAClCzF,EAAAC,EAAAC,cAAC2H,EAAA5H,EAAD,CAAQ6H,QAAQ,YAAY5G,UAAU,OAAOE,QAAShD,KAAKqH,UAA3D,4BAGAzF,EAAAC,EAAAC,cAAC2H,EAAA5H,EAAD,CAAQ6H,QAAQ,YAAY5G,UAAU,WAAWE,QAAShD,KAAKmG,cAA/D,gBAGCnG,KAAK6I,aACJjH,EAAAC,EAAAC,cAAC2H,EAAA5H,EAAD,CAAQ6H,QAAQ,YAAY5G,UAAU,YAAtC,gBAEclB,EAAAC,EAAAC,cAAA,YAChBF,EAAAC,EAAAC,cAAC6H,EAAA,eAAD,CACE7G,UAAU,aACV8G,iBAAkB5J,KAAKiG,cAEzBrE,EAAAC,EAAAC,cAAC+H,EAAAhI,EAAD,CACEgC,MAAM,aACNf,UAAU,YACVY,MAAOW,EACPH,SAAUlE,KAAKgG,WACf9D,OAAO,SACP4H,WAAS,IAEXlI,EAAAC,EAAAC,cAACiI,EAAD,CACErH,KAAK,YACLQ,KAAMpD,OAAOoD,KAAKlD,KAAKgF,oBACvB7B,UAAWA,EACXC,aAAcpD,KAAK6F,kBAEpBwD,WAjNKhH,aCvDE2H,QACW,cAA7BhC,OAAOC,SAASgC,UAEe,UAA7BjC,OAAOC,SAASgC,UAEhBjC,OAAOC,SAASgC,SAASC,MACvB,2DCZNC,IAASC,OAAOxI,EAAAC,EAAAC,cAACuI,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBhC,WACrBA,UAAUiC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.3166f1f7.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Player extends Component {\n  constructor(props) {\n    super(props);\n    this.textP = React.createRef();\n  }\n\n  componentDidMount() {\n    this.setAnimate();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props !== prevProps) {\n      this.setAnimate();\n    }\n  }\n\n  setAnimate() {\n    const {\n      speed,\n      animation,\n    } = this.props;\n\n    this.textP.current.animate(animation, {\n      duration: speed * 1000,\n      iterations: Infinity,\n    });\n  }\n\n  render() {\n    const {\n      player,\n      text,\n      backgroundColor,\n      color,\n      height,\n      fontSize,\n    } = this.props;\n\n    const backStyle = {\n      backgroundColor,\n      color,\n      overflow: 'hidden',\n      position: 'relative',\n      height: `${height}rem`,\n    };\n    if (player) {\n      delete backStyle.backgroundColor;\n    }\n\n    return (\n      <div\n        style={backStyle}\n      >\n        <p\n          ref={this.textP}\n          style={{\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            margin: '0',\n            lineHeight: '100%',\n            textAlign: 'center',\n            fontSize: `${fontSize}rem`,\n          }}\n        >\n          {text}\n        </p>\n      </div>\n    );\n  }\n}\n\nPlayer.propTypes = {\n  player: PropTypes.bool.isRequired,\n  text: PropTypes.string.isRequired,\n  backgroundColor: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n  height: PropTypes.string.isRequired,\n  fontSize: PropTypes.number.isRequired,\n  speed: PropTypes.number.isRequired,\n  animation: PropTypes.arrayOf(PropTypes.object),\n};\n\nPlayer.defaultProps = {\n  animation: [\n    { transform: 'translateY(100%)' },\n    { transform: 'translateY(-100%)' },\n  ],\n};\n\nexport default Player;\n","import React from 'react';\n\nfunction IncButton(prop) {\n  const {\n    name,\n    increase,\n    decrease,\n  } = prop;\n\n  const buttonStyle = {\n    height: '100px',\n    width: '100px',\n    margin: '10px',\n    fontSize: '30px',\n  };\n\n  return (\n    <div>\n      <p className=\"name\">{name}</p>\n      <button\n        className=\"btIncFontSize\"\n        type=\"button\"\n        onClick={increase}\n        style={buttonStyle}\n      >\n        {'+'}\n      </button>\n      <button\n        className=\"btDecFontSize\"\n        type=\"button\"\n        onClick={decrease}\n        style={buttonStyle}\n      >\n        {'-'}\n      </button>\n    </div>\n  );\n}\n\nexport default IncButton;\n","import React from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nfunction DirectionButton(prop) {\r\n  const {\r\n    name,\r\n    keys,\r\n    direction,\r\n    handleChange,\r\n  } = prop;\r\n\r\n  const Radios = keys.map(el => (\r\n    <FormControlLabel key={el} value={el} control={<Radio />} label={el} />));\r\n\r\n  return (\r\n    <div>\r\n      <FormControl component=\"fieldset\">\r\n        <FormLabel component=\"legend\" className=\"name\">{name}</FormLabel>\r\n        <RadioGroup\r\n          value={direction}\r\n          onChange={handleChange}\r\n        >\r\n          {Radios}\r\n        </RadioGroup>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DirectionButton;\r\n","import React, { Component } from 'react';\nimport { SwatchesPicker } from 'react-color';\nimport { saveAs } from 'file-saver';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Player from './components/Player';\nimport IncButton from './components/IncButton';\nimport DirectionButton from './components/DirectionButton';\n\nconst DEFAULT_PLAYER_HEIGHT = 10;\nconst DEFAULT_STATE = {\n  direction: 'up',\n  textState: 'Text',\n  colorState: '#FFFFFF',\n  fontSize: 5,\n  speed: 10,\n};\n\nfunction paramIsTruthy(param) {\n  return [1, '1', 'true', 'True'].indexOf(param) > -1;\n}\n\nfunction download(data, filename) {\n  const file = new Blob([data], { type: 'text/plain;charset=utf-8' });\n  saveAs(file, filename);\n}\n\nfunction getNewState(data) {\n  const newValue = {};\n  Object.keys(DEFAULT_STATE).forEach((key) => {\n    if (Object.prototype.hasOwnProperty.call(data, key)) {\n      newValue[key] = data[key];\n    }\n  });\n  return newValue;\n}\n\nfunction getNewStateFromURL(url) {\n  const newValue = {};\n\n  Object.assign(newValue, DEFAULT_STATE);\n\n  Object.keys(DEFAULT_STATE).forEach((key) => {\n    if (url.searchParams.get(key)) {\n      switch (key) {\n        case 'colorState':\n          newValue[key] = `#${url.searchParams.get(key)}`;\n          break;\n        case 'fontSize':\n          newValue[key] = parseInt(url.searchParams.get(key), 10);\n          break;\n        case 'speed':\n          newValue[key] = parseInt(url.searchParams.get(key), 10);\n          break;\n        default:\n          newValue[key] = url.searchParams.get(key);\n          break;\n      }\n    }\n  });\n  return newValue;\n}\n\nfunction checkElectron() {\n  return navigator.userAgent.toLowerCase().indexOf(' electron/') > -1;\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    const url = new URL(window.location.href);\n    const player = paramIsTruthy(url.searchParams.get('player'));\n    const electron = checkElectron();\n\n    this.state = getNewStateFromURL(url);\n    this.state.currentAnimation = this.getAnimation();\n\n    App.prototype.isPlayerMode = () => player;\n    App.prototype.isElectron = () => electron;\n\n    this.getIncButtunList().forEach((bt) => {\n      const {\n        name,\n        lowLimit,\n        highLimit,\n        reverse,\n      } = bt;\n\n      const increase = () => {\n        const { [name]: prev } = this.state;\n        const newValue = prev < highLimit - 1 ? prev + 1 : highLimit;\n        this.setState({ [name]: newValue }, this.updateAnimation);\n      };\n\n      const decrease = () => {\n        const { [name]: prev } = this.state;\n        const newValue = prev > lowLimit + 1 ? prev - 1 : lowLimit;\n        this.setState({ [name]: newValue }, this.updateAnimation);\n      };\n\n      if (reverse) {\n        App.prototype[`${name}Inc`] = decrease;\n        App.prototype[`${name}Dec`] = increase;\n      } else {\n        App.prototype[`${name}Inc`] = increase;\n        App.prototype[`${name}Dec`] = decrease;\n      }\n    });\n  }\n\n  getDefaultPlayerHeight = () => DEFAULT_PLAYER_HEIGHT;\n\n  getIncButtunList = () => [\n    {\n      name: 'fontSize',\n      lowLimit: 1,\n      highLimit: 100,\n      reverse: false,\n    },\n    {\n      name: 'speed',\n      lowLimit: 1,\n      highLimit: 100,\n      reverse: true,\n    },\n  ];\n\n  getAnimation = () => {\n    const { fontSize, direction } = this.state;\n    return this.getAnimationList(fontSize)[direction];\n  };\n\n  getAnimationList = (fontSize = DEFAULT_STATE.fontSize) => {\n    const heightMiddle = (DEFAULT_PLAYER_HEIGHT - fontSize) / 2;\n\n    return {\n      up: [\n        { transform: `translateY(${DEFAULT_PLAYER_HEIGHT}rem)` },\n        { transform: `translateY(${heightMiddle}rem)`, offset: 0.3 },\n        { transform: `translateY(${heightMiddle}rem)`, offset: 0.7 },\n        { transform: `translateY(-${DEFAULT_PLAYER_HEIGHT}rem)` },\n      ],\n      down: [\n        { transform: `translateY(-${DEFAULT_PLAYER_HEIGHT}rem)` },\n        { transform: `translateY(${heightMiddle}rem)`, offset: 0.3 },\n        { transform: `translateY(${heightMiddle}rem)`, offset: 0.7 },\n        { transform: `translateY(${DEFAULT_PLAYER_HEIGHT}rem)` },\n      ],\n      right: [\n        { transform: `translate(-100%, ${heightMiddle}rem)` },\n        { transform: `translate(0%, ${heightMiddle}rem)`, offset: 0.3 },\n        { transform: `translate(0%, ${heightMiddle}rem)`, offset: 0.7 },\n        { transform: `translate(100%, ${heightMiddle}rem)` },\n      ],\n      left: [\n        { transform: `translate(100%, ${heightMiddle}rem)` },\n        { transform: `translate(0%, ${heightMiddle}rem)`, offset: 0.3 },\n        { transform: `translate(0%, ${heightMiddle}rem)`, offset: 0.7 },\n        { transform: `translate(-100%, ${heightMiddle}rem)` },\n      ],\n    };\n  }\n\n  updateAnimation = () => {\n    this.setState({ currentAnimation: this.getAnimation() });\n  };\n\n  directionChange = (event) => {\n    this.setState({ direction: event.target.value }, this.updateAnimation);\n  };\n\n  textChange = (event) => {\n    this.setState({ textState: event.target.value });\n  };\n\n  colorChange = (color) => {\n    this.setState({ colorState: color.hex });\n  };\n\n  downloadJSON = () => {\n    const newValue = {};\n    Object.assign(newValue, this.state);\n\n    newValue.mfp_type = 'esign';\n    delete newValue.currentAnimation;\n    const data = JSON.stringify({ ...newValue }, null, 4);\n\n    download(data, 'esign.json');\n  }\n\n  setStateFromJSON = (data) => {\n    this.setState(getNewState(data), this.updateAnimation);\n  }\n\n  loadJSON = (event) => {\n    const file = event.target.files[0];\n\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = () => {\n        const data = JSON.parse(reader.result);\n        // TODO: need parse fail error handling\n        this.setStateFromJSON(data);\n      };\n      reader.readAsText(file);\n    }\n  }\n\n  render() {\n    const {\n      currentAnimation,\n      direction,\n      textState,\n      colorState,\n    } = this.state;\n    const playerProps = { };\n\n    this.getIncButtunList().forEach((bt) => {\n      const { name } = bt;\n      const { [name]: btState } = this.state;\n      playerProps[name] = btState;\n    });\n\n    const IncButtonComponents = this.getIncButtunList().map(bt => (<IncButton\n      key={bt.name}\n      name={bt.name}\n      className={bt.name}\n      increase={App.prototype[`${bt.name}Inc`]}\n      decrease={App.prototype[`${bt.name}Dec`]}\n    />\n    ));\n\n    return (\n      <div className=\"App\">\n        <Player\n          className=\"player\"\n          player={this.isPlayerMode()}\n          text={textState}\n          backgroundColor=\"black\"\n          color={colorState}\n          height={String(DEFAULT_PLAYER_HEIGHT)}\n          direction=\"left\"\n          animation={currentAnimation}\n          {...playerProps}\n        />\n        {this.isPlayerMode() ? (<div />) : (\n          <div>\n            <input type=\"file\" onChange={this.loadJSON} />\n            <Button variant=\"contained\" className=\"load\" onClick={this.loadJSON}>\n              읽어오기\n            </Button>\n            <Button variant=\"contained\" className=\"download\" onClick={this.downloadJSON}>\n              완료\n            </Button>\n            {this.isElectron() ? (\n              <Button variant=\"contained\" className=\"download\">\n                취소\n              </Button>) : (<div />)}\n            <SwatchesPicker\n              className=\"colorInput\"\n              onChangeComplete={this.colorChange}\n            />\n            <TextField\n              label=\"Text Input\"\n              className=\"textInput\"\n              value={textState}\n              onChange={this.textChange}\n              margin=\"normal\"\n              fullWidth\n            />\n            <DirectionButton\n              name=\"Direction\"\n              keys={Object.keys(this.getAnimationList())}\n              direction={direction}\n              handleChange={this.directionChange}\n            />\n            {IncButtonComponents}\n          </div>)}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}