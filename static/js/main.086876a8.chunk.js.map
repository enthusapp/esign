{"version":3,"sources":["components/Player.js","components/IncButton.js","components/CheckboxSelection.js","components/MainButton.js","App.js","serviceWorker.js","index.js","tool.js"],"names":["Player","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","textP","React","createRef","setAnimate","prevProps","_this$props","speed","animation","current","animate","duration","iterations","Infinity","_this$props2","player","text","backgroundColor","color","height","fontSize","backStyle","overflow","position","concat","react_default","a","createElement","style","ref","width","margin","lineHeight","textAlign","Component","defaultProps","transform","IncButton","prop","increase","decrease","buttonStyle","className","type","onClick","CheckboxSelection","keys","checkedKeys","handleChange","Checks","map","el","FormControlLabel_default","key","control","Checkbox_default","checked","indexOf","onChange","value","label","error","length","FormControl_default","required","component","FormGroup_default","row","FormHelperText_default","MainButton","load","target","isElectron","setState","isLoaded","state","download","cancel","saveAs","electronSaveText","electronSaveAction","marginStyle","Fragment","htmlFor","id","accept","display","Button_default","variant","pixToRem","pix","parseFloat","getComputedStyle","document","querySelector","App","getIncButtunList","name","r","Tool","round10","getDefaultState","direction","textState","colorState","getNewState","data","newValue","forEach","prototype","hasOwnProperty","getNewStateFromURL","url","assign","searchParams","getAll","get","parseInt","getAnimation","_this$state","direct","toConsumableArray","getAnimationList","offset","ceil10","sum","ani","rsum","arguments","undefined","getPlayerHeight","heightMiddle","up","down","right","left","updateAnimation","_this$state2","currentAnimation","currentSpeed","directionChange","event","index","push","splice","textChange","colorChange","hex","file","Blob","JSON","stringify","makeDownloadFormat","_ref","mfp_type","save","downData","fileName","objectSpread","setStateFromJSON","fileReaderOnLoad","reader","parse","result","files","FileReader","onload","readAsText","param","URL","window","location","href","electron","navigator","userAgent","toLowerCase","innerHeight","isPlayerMode","_this$state3","bt","prev","defineProperty","_this$state4","IncButtonComponents","Grid_default","item","xs","Paper_default","elevation","padding","Typography_default","components_IncButton","top","zIndex","components_Player","String","components_MainButton","container","spacing","justify","TextField_default","fullWidth","components_CheckboxSelection","paddingTop","lib","onChangeComplete","innerWidth","Boolean","hostname","match","ReactDOM","render","src_App","getElementById","serviceWorker","ready","then","registration","unregister","decimalAdjust","inValue","inExp","exp","Math","Number","isNaN","NaN","toString","split","module","exports"],"mappings":"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","file":"static/js/main.086876a8.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Player extends Component {\n  constructor(props) {\n    super(props);\n    this.textP = React.createRef();\n  }\n\n  componentDidMount() {\n    this.setAnimate();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props !== prevProps) {\n      this.setAnimate();\n    }\n  }\n\n  setAnimate() {\n    const {\n      speed,\n      animation,\n    } = this.props;\n\n    this.textP.current.animate(animation, {\n      duration: speed * 1000,\n      iterations: Infinity,\n    });\n  }\n\n  render() {\n    const {\n      player,\n      text,\n      backgroundColor,\n      color,\n      height,\n      fontSize,\n    } = this.props;\n\n    const backStyle = {\n      backgroundColor,\n      color,\n      overflow: 'hidden',\n      position: 'relative',\n      height: `${height}rem`,\n    };\n    if (player) {\n      delete backStyle.backgroundColor;\n    }\n\n    return (\n      <div\n        style={backStyle}\n      >\n        <p\n          ref={this.textP}\n          style={{\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            margin: '0',\n            lineHeight: '100%',\n            textAlign: 'center',\n            fontSize: `${fontSize}rem`,\n          }}\n        >\n          {text}\n        </p>\n      </div>\n    );\n  }\n}\n\nPlayer.propTypes = {\n  player: PropTypes.bool.isRequired,\n  text: PropTypes.string.isRequired,\n  backgroundColor: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n  height: PropTypes.string.isRequired,\n  fontSize: PropTypes.number.isRequired,\n  speed: PropTypes.number.isRequired,\n  animation: PropTypes.arrayOf(PropTypes.object),\n};\n\nPlayer.defaultProps = {\n  animation: [\n    { transform: 'translateY(100%)' },\n    { transform: 'translateY(-100%)' },\n  ],\n};\n\nexport default Player;\n","import React from 'react';\n\nfunction IncButton(prop) {\n  const {\n    increase,\n    decrease,\n  } = prop;\n\n  const buttonStyle = {\n    height: '3rem',\n    width: '3rem',\n    margin: '0.5rem',\n    fontSize: '30px',\n  };\n\n  return (\n    <div>\n      <button\n        className=\"btIncFontSize\"\n        type=\"button\"\n        onClick={increase}\n        style={buttonStyle}\n      >\n        {'+'}\n      </button>\n      <button\n        className=\"btDecFontSize\"\n        type=\"button\"\n        onClick={decrease}\n        style={buttonStyle}\n      >\n        {'-'}\n      </button>\n    </div>\n  );\n}\n\nexport default IncButton;\n","import React from 'react';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\nfunction CheckboxSelection(prop) {\n  const {\n    keys,\n    checkedKeys,\n    handleChange,\n  } = prop;\n\n  const Checks = keys.map(el => (\n    <FormControlLabel\n      key={el}\n      control={(\n        <Checkbox\n          className={`${el}checkBox`}\n          checked={checkedKeys.indexOf(el) > -1}\n          onChange={handleChange}\n          color=\"default\"\n          value={el}\n        />\n        )\n      }\n      label={el}\n    />\n  ));\n\n  const error = checkedKeys.length < 1;\n\n  return (\n    <FormControl\n      required\n      error={error}\n      component=\"fieldset\"\n    >\n      <FormGroup row>\n        {Checks}\n      </FormGroup>\n      <FormHelperText>반드시 한개 이상 선택해야 합니다.</FormHelperText>\n    </FormControl>\n  );\n}\n\nexport default CheckboxSelection;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\n\nclass MainButton extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { isLoaded: false };\n  }\n\n  load = (target) => {\n    const {\n      load,\n      isElectron,\n    } = this.props;\n\n    if (isElectron) {\n      this.setState({ isLoaded: true });\n    }\n    load(target);\n  }\n\n  render() {\n    const {\n      download,\n      cancel,\n      saveAs,\n      isElectron,\n    } = this.props;\n\n    const {\n      isLoaded,\n    } = this.state;\n\n    const electronSaveText = isLoaded ? '수정완료' : '새로 만들기';\n    const electronSaveAction = isLoaded ? download : saveAs;\n    const marginStyle = { margin: '0.5rem', width: `${isElectron ? 7 : 6}rem` };\n\n    return (\n      <div style={{ backgroundColor: '#eeeeee', width: '100%' }}>\n        {isLoaded ? (<></>\n        ) : (\n          <label htmlFor=\"load\">\n            <input\n              id=\"load\"\n              className=\"load\"\n              type=\"file\"\n              onChange={this.load}\n              accept=\".esign\"\n              style={{ display: 'none' }}\n            />\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              component=\"span\"\n              className=\"loadText\"\n              style={marginStyle}\n            >\n              읽어오기\n            </Button>\n          </label>)\n        }\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          className=\"save\"\n          onClick={isElectron ? electronSaveAction : download}\n          style={marginStyle}\n        >\n          {isElectron ? electronSaveText : '완료' }\n        </Button>\n        {isLoaded ? (\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            className=\"saveAs\"\n            onClick={saveAs}\n            style={marginStyle}\n          >\n            새로 만들기\n          </Button>\n        ) : (<></>)\n        }\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          className=\"cancel\"\n          onClick={cancel}\n          style={marginStyle}\n        >\n          {isElectron ? '취소' : '초기화' }\n        </Button>\n      </div>\n    );\n  }\n}\n\nMainButton.propTypes = {\n  load: PropTypes.func.isRequired,\n  download: PropTypes.func.isRequired,\n  cancel: PropTypes.func.isRequired,\n  saveAs: PropTypes.func.isRequired,\n  isElectron: PropTypes.bool.isRequired,\n};\n\nexport default MainButton;\n","import React, { Component } from 'react';\nimport { SwatchesPicker } from 'react-color';\nimport { saveAs } from 'file-saver';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Player from './components/Player';\nimport IncButton from './components/IncButton';\nimport CheckboxSelection from './components/CheckboxSelection';\nimport MainButton from './components/MainButton';\nimport Tool from './tool';\n\nfunction paramIsTruthy(param) {\n  return [1, '1', 'true', 'True'].indexOf(param) > -1;\n}\n\nfunction checkElectron() {\n  return navigator.userAgent.toLowerCase().indexOf(' electron/') > -1;\n}\n\nconst pixToRem = pix => pix / parseFloat(\n  getComputedStyle(document.querySelector('body'))['font-size'],\n);\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    const url = new URL(window.location.href);\n    const player = paramIsTruthy(url.searchParams.get('player'));\n    const electron = checkElectron();\n    let height;\n\n    if (player) {\n      height = pixToRem(window.innerHeight);\n    } else {\n      height = 5;\n    //  document.getElementsByTagName('body')[0].style.backgroundColor = '#eeeeee';\n    }\n\n    App.prototype.isPlayerMode = () => player;\n    App.prototype.isElectron = () => electron;\n    App.prototype.getPlayerHeight = () => height;\n\n    if (electron) {\n      App.prototype.cancel = () => this.download({ cancel: true });\n    } else {\n      App.prototype.cancel = () => this.setState(\n        this.getDefaultState(), this.updateAnimation,\n      );\n    }\n\n    this.state = this.getNewStateFromURL(url);\n    this.state.currentAnimation = this.getAnimation();\n    const { speed, direction } = this.state;\n    this.state.currentSpeed = direction.length * speed;\n\n    this.getIncButtunList().forEach((bt) => {\n      const { name, increase, decrease } = bt;\n\n      App.prototype[`${name}Inc`] = () => {\n        const { [name]: prev } = this.state;\n        this.setState({ [name]: increase(prev) }, this.updateAnimation);\n      };\n\n      App.prototype[`${name}Dec`] = () => {\n        const { [name]: prev } = this.state;\n        this.setState({ [name]: decrease(prev) }, this.updateAnimation);\n      };\n    });\n  }\n\n  getIncButtunList = () => [\n    {\n      label: '글자 크기',\n      name: 'fontSize',\n      increase: (fontSize) => {\n        let r = 100;\n        if (fontSize < 1) {\n          r = fontSize + 0.1;\n        } else if (fontSize < 2) {\n          r = fontSize + 0.2;\n        } else if (fontSize < 99) {\n          r = fontSize + 1;\n        }\n        return Tool.round10(r, -1);\n      },\n      decrease: (fontSize) => {\n        let r = 0.1;\n        if (fontSize > 2) {\n          r = fontSize - 1;\n        } else if (fontSize > 1) {\n          r = fontSize - 0.2;\n        } else if (fontSize > 0.2) {\n          r = fontSize - 0.1;\n        }\n        return Tool.round10(r, -1);\n      },\n    },\n    {\n      label: '속도',\n      name: 'speed',\n      increase: speed => (speed > 2 ? speed - 1 : 1),\n      decrease: speed => (speed < 100 - 1 ? speed + 1 : 100),\n    },\n  ];\n\n  getDefaultState = () => ({\n    direction: ['up'],\n    textState: 'ENTHUS 미디어 파사드',\n    colorState: '#FFFFFF',\n    fontSize: 2,\n    speed: 5,\n  })\n\n  getNewState = (data) => {\n    const newValue = {};\n    Object.keys(this.getDefaultState()).forEach((key) => {\n      if (Object.prototype.hasOwnProperty.call(data, key)) {\n        newValue[key] = data[key];\n      }\n    });\n    return newValue;\n  }\n\n  getNewStateFromURL = (url) => {\n    const newValue = {};\n\n    Object.assign(newValue, this.getDefaultState());\n\n    Object.keys(this.getDefaultState()).forEach((key) => {\n      if (key === 'direction') {\n        newValue[key] = url.searchParams.getAll(`${key}[]`);\n        if (newValue[key].length === 0) {\n          newValue[key] = this.getDefaultState()[key];\n        } // TODO: make new validation function\n        return;\n      }\n      if (url.searchParams.get(key)) {\n        switch (key) {\n          case 'colorState':\n            newValue[key] = `#${url.searchParams.get(key)}`;\n            break;\n          case 'fontSize':\n            newValue[key] = parseInt(url.searchParams.get(key), 10);\n            break;\n          case 'speed':\n            newValue[key] = parseInt(url.searchParams.get(key), 10);\n            break;\n          default:\n            newValue[key] = url.searchParams.get(key);\n            break;\n        }\n      }\n    });\n    return newValue;\n  }\n\n  getAnimation = () => {\n    const { fontSize, direction } = this.state;\n    let animation = [];\n\n    direction.forEach((direct) => {\n      animation = [...animation, ...this.getAnimationList(fontSize)[direct]];\n    });\n\n    const offset = Tool.ceil10(1 / (animation.length - 1), -4);\n    let sum = 0;\n\n    return animation.map((ani) => {\n      const rsum = sum;\n      sum = Tool.ceil10(sum + offset, -4);\n      if (sum > 1) sum = 1;\n\n      return { transform: ani, offset: rsum };\n    });\n  };\n\n  getAnimationList = (fontSize = this.getDefaultState().fontSize) => {\n    const height = this.getPlayerHeight();\n    const heightMiddle = (height - fontSize) / 2;\n\n    return {\n      up: [\n        `translateY(${height}rem)`,\n        `translateY(${heightMiddle}rem)`,\n        `translateY(${heightMiddle}rem)`,\n        `translateY(-${height}rem)`,\n      ],\n      down: [\n        `translateY(-${height}rem)`,\n        `translateY(${heightMiddle}rem)`,\n        `translateY(${heightMiddle}rem)`,\n        `translateY(${height}rem)`,\n      ],\n      right: [\n        `translate(-100%, ${heightMiddle}rem)`,\n        `translate(0%, ${heightMiddle}rem)`,\n        `translate(0%, ${heightMiddle}rem)`,\n        `translate(100%, ${heightMiddle}rem)`,\n      ],\n      left: [\n        `translate(100%, ${heightMiddle}rem)`,\n        `translate(0%, ${heightMiddle}rem)`,\n        `translate(0%, ${heightMiddle}rem)`,\n        `translate(-100%, ${heightMiddle}rem)`,\n      ],\n    };\n  }\n\n  updateAnimation = () => {\n    const { speed, direction } = this.state;\n    this.setState({ currentAnimation: this.getAnimation() });\n    this.setState({ currentSpeed: speed * direction.length });\n  };\n\n  directionChange = (event) => {\n    const { direction } = this.state;\n    const index = direction.indexOf(event.target.value);\n\n    if (event.target.checked) {\n      if (index === -1) direction.push(event.target.value);\n    } else if (index > -1 && direction.length > 1) {\n      direction.splice(index, 1);\n    }\n\n    this.setState({ direction }, this.updateAnimation);\n  }\n\n  textChange = (event) => {\n    this.setState({ textState: event.target.value });\n  };\n\n  colorChange = (color) => {\n    this.setState({ colorState: color.hex });\n  };\n\n  download = (data) => {\n    const file = new Blob(\n      [JSON.stringify(data, null, 4)],\n      { type: 'text/plain;charset=utf-8' },\n    );\n    saveAs(file, 'message.esign');\n  };\n\n  makeDownloadFormat = ({\n    fontSize, speed, colorState, textState, direction,\n  }) => ({\n    fontSize, speed, colorState, textState, direction, mfp_type: 'esign',\n  });\n\n  save = () => {\n    const downData = this.makeDownloadFormat(this.state);\n    const { fileName } = this.state;\n    if (this.isElectron()) downData.fileName = fileName;\n    this.download(downData);\n  }\n\n  saveAs = () => {\n    this.download({ saveAs: true, ...this.makeDownloadFormat(this.state) });\n  }\n\n  setStateFromJSON = (data) => {\n    this.setState(this.getNewState(data), this.updateAnimation);\n  }\n\n  fileReaderOnLoad = (reader, file) => {\n    const data = JSON.parse(reader.result);\n    // TODO: need parse fail error handling\n    this.setStateFromJSON(data);\n    if (this.isElectron()) this.setState({ fileName: file.name });\n  }\n\n  load = (event) => {\n    const file = event.target.files[0];\n\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = () => { this.fileReaderOnLoad(reader, file); };\n      reader.readAsText(file);\n    }\n  }\n\n  render() {\n    const {\n      currentAnimation,\n      direction,\n      textState,\n      colorState,\n      currentSpeed,\n      fontSize,\n    } = this.state;\n    const playerProps = { };\n\n    const IncButtonComponents = this.getIncButtunList().map(bt => (\n      <Grid item xs key={bt.name}>\n        <Paper elevation={1} style={{ padding: '1rem' }}>\n          <Typography component=\"p\">\n            {bt.label}\n          </Typography>\n          <IncButton\n            className={bt.name}\n            increase={App.prototype[`${bt.name}Inc`]}\n            decrease={App.prototype[`${bt.name}Dec`]}\n          />\n        </Paper>\n      </Grid>\n    ));\n\n    return (\n      <div className=\"App\">\n        <div\n          className=\"PlayerWrap\"\n          style={{ position: 'sticky', top: 0, zIndex: 10 }}\n        >\n          <Player\n            className=\"player\"\n            player={this.isPlayerMode()}\n            text={textState}\n            backgroundColor=\"black\"\n            color={colorState}\n            height={String(this.getPlayerHeight())}\n            speed={currentSpeed}\n            fontSize={fontSize}\n            animation={currentAnimation}\n            {...playerProps}\n          />\n          {this.isPlayerMode() ? (<></>) : (\n            <MainButton\n              className=\"mainButton\"\n              load={this.load}\n              download={this.save}\n              cancel={this.cancel}\n              saveAs={this.saveAs}\n              isElectron={this.isElectron()}\n            />\n          )}\n        </div>\n        {this.isPlayerMode() ? (<></>) : (\n          <div\n            className=\"InputWrap\"\n            style={{ zIndex: 1, padding: '0.5rem' }}\n          >\n            <Grid container spacing={24} justify=\"center\">\n              <Grid item xs={12}>\n                <Paper elevation={1} style={{ padding: '1rem' }}>\n                  <Typography component=\"p\">\n                    메시지 입력\n                  </Typography>\n                  <TextField\n                    className=\"textInput\"\n                    value={textState}\n                    onChange={this.textChange}\n                    margin=\"normal\"\n                    fullWidth\n                  />\n                </Paper>\n              </Grid>\n              {IncButtonComponents}\n              <Grid item xs>\n                <Paper elevation={1} style={{ padding: '1rem' }}>\n                  <Typography component=\"p\">\n                    방향 설정\n                  </Typography>\n                  <CheckboxSelection\n                    checkedKeys={direction}\n                    keys={Object.keys(this.getAnimationList())}\n                    handleChange={this.directionChange}\n                  />\n                </Paper>\n              </Grid>\n              <Grid item xs={12}>\n                <Paper elevation={1} style={{ padding: '1rem' }}>\n                  <Typography component=\"p\">\n                    색 설정\n                  </Typography>\n                  <div style={{ paddingTop: '0.5rem' }}>\n                    <SwatchesPicker\n                      className=\"colorInput\"\n                      onChangeComplete={this.colorChange}\n                      width={window.innerWidth - 50}\n                      height={170}\n                    />\n                  </div>\n                </Paper>\n              </Grid>\n            </Grid>\n          </div>)}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","function Tool() {\n}\n\nfunction decimalAdjust(type, inValue, inExp) {\n  let value = inValue;\n  let exp = inExp;\n\n  if (typeof exp === 'undefined' || +exp === 0) {\n    return Math[type](value);\n  }\n\n  value = +value;\n  exp = +exp;\n\n  if (Number.isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0)) {\n    return NaN;\n  }\n\n  value = value.toString().split('e');\n  value = Math[type](+(`${value[0]}e${(value[1] ? (+value[1] - exp) : -exp)}`));\n  value = value.toString().split('e');\n\n  return +(`${value[0]}e${(value[1] ? (+value[1] + exp) : exp)}`);\n}\n\nmodule.exports = new Tool();\n\nTool.prototype.round10 = (value, exp) => decimalAdjust('round', value, exp);\nTool.prototype.ceil10 = (value, exp) => decimalAdjust('ceil', value, exp);\n"],"sourceRoot":""}