{"version":3,"sources":["components/Player.js","components/IncButton.js","components/DirectionButton.js","App.js","serviceWorker.js","index.js"],"names":["Player","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","textP","React","createRef","setAnimate","prevProps","_this$props","speed","animation","current","animate","duration","iterations","Infinity","_this$props2","text","backgroundColor","color","height","fontSize","react_default","a","createElement","style","overflow","position","concat","ref","width","margin","lineHeight","textAlign","Component","defaultProps","transform","IncButton","prop","name","increase","decrease","buttonStyle","className","type","onClick","DirectionButton","keys","direction","handleChange","Radios","map","el","FormControlLabel_default","key","value","control","Radio_default","label","FormControl_default","component","FormLabel_default","RadioGroup_default","onChange","DEFAULT_PLAYER_HEIGHT","DEFAULT_FONT_SIZE","App","getDefaultPlayerHeight","getIncButtunList","id","defaultVal","lowLimit","highLimit","reverse","getAnimationList","arguments","length","undefined","heightMiddle","up","offset","down","right","left","directionChange","event","state","setState","target","currentAnimation","textChange","textState","colorChange","colorState","hex","downloadJSON","data","filename","file","Blob","saveAs","download","JSON","stringify","param","url","URL","window","location","href","player","searchParams","get","indexOf","prototype","isPlayerMode","makeState","forEach","bt","_this$state","prev","newValue","defineProperty","_this$state2","_this2","_this$state3","playerProps","btState","IncButtonComponents","components_IncButton","components_Player","assign","String","Button_default","variant","lib","onChangeComplete","TextField_default","fullWidth","components_DirectionButton","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bc07dee5.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Player extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.textP = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setAnimate();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props !== prevProps) {\r\n      this.setAnimate();\r\n    }\r\n  }\r\n\r\n  setAnimate() {\r\n    const {\r\n      speed,\r\n      animation,\r\n    } = this.props;\r\n\r\n    this.textP.current.animate(animation, {\r\n      duration: speed * 1000,\r\n      iterations: Infinity,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      text,\r\n      backgroundColor,\r\n      color,\r\n      height,\r\n      fontSize,\r\n    } = this.props;\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          backgroundColor,\r\n          color,\r\n          overflow: 'hidden',\r\n          position: 'relative',\r\n          height: `${height}rem`,\r\n        }}\r\n      >\r\n        <p\r\n          ref={this.textP}\r\n          style={{\r\n            position: 'absolute',\r\n            width: '100%',\r\n            height: '100%',\r\n            margin: '0',\r\n            lineHeight: '100%',\r\n            textAlign: 'center',\r\n            fontSize: `${fontSize}rem`,\r\n          }}\r\n        >\r\n          {text}\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPlayer.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  backgroundColor: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n  height: PropTypes.string.isRequired,\r\n  fontSize: PropTypes.number.isRequired,\r\n  speed: PropTypes.number.isRequired,\r\n  animation: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n\r\nPlayer.defaultProps = {\r\n  animation: [\r\n    { transform: 'translateY(100%)' },\r\n    { transform: 'translateY(-100%)' },\r\n  ],\r\n};\r\n\r\nexport default Player;\r\n","import React from 'react';\n\nfunction IncButton(prop) {\n  const {\n    name,\n    increase,\n    decrease,\n  } = prop;\n\n  const buttonStyle = {\n    height: '100px',\n    width: '100px',\n    margin: '10px',\n    fontSize: '30px',\n  };\n\n  return (\n    <div>\n      <p className=\"name\">{name}</p>\n      <button\n        className=\"btIncFontSize\"\n        type=\"button\"\n        onClick={increase}\n        style={buttonStyle}\n      >\n        {'+'}\n      </button>\n      <button\n        className=\"btDecFontSize\"\n        type=\"button\"\n        onClick={decrease}\n        style={buttonStyle}\n      >\n        {'-'}\n      </button>\n    </div>\n  );\n}\n\nexport default IncButton;\n","import React from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nfunction DirectionButton(prop) {\r\n  const {\r\n    name,\r\n    keys,\r\n    direction,\r\n    handleChange,\r\n  } = prop;\r\n\r\n  const Radios = keys.map(el => (\r\n    <FormControlLabel key={el} value={el} control={<Radio />} label={el} />));\r\n\r\n  return (\r\n    <div>\r\n      <FormControl component=\"fieldset\">\r\n        <FormLabel component=\"legend\" className=\"name\">{name}</FormLabel>\r\n        <RadioGroup\r\n          value={direction}\r\n          onChange={handleChange}\r\n        >\r\n          {Radios}\r\n        </RadioGroup>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DirectionButton;\r\n","import React, { Component } from 'react';\nimport { SwatchesPicker } from 'react-color';\nimport { saveAs } from 'file-saver';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Player from './components/Player';\nimport IncButton from './components/IncButton';\nimport DirectionButton from './components/DirectionButton';\n\nconst DEFAULT_PLAYER_HEIGHT = 10;\nconst DEFAULT_FONT_SIZE = 5;\n\nfunction paramIsTruthy(param) {\n  return [1, '1', 'true', 'True'].indexOf(param) > -1;\n}\n\nfunction download(data, filename) {\n  const file = new Blob([data], { type: 'text/plain;charset=utf-8' });\n  saveAs(file, filename);\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    const url = new URL(window.location.href);\n    const player = paramIsTruthy(url.searchParams.get('player'));\n\n    App.prototype.isPlayerMode = () => player;\n\n    const makeState = {\n      currentAnimation: this.getAnimationList().up,\n      direction: 'up',\n      textState: 'Text',\n      colorState: '#FFFFFF',\n    };\n\n    this.getIncButtunList().forEach((bt) => {\n      const {\n        name,\n        defaultVal,\n        lowLimit,\n        highLimit,\n        reverse,\n      } = bt;\n\n      makeState[name] = defaultVal;\n\n      const increase = () => {\n        const { [name]: prev, direction } = this.state;\n        const newValue = prev < highLimit - 1 ? prev + 1 : highLimit;\n        this.setState({\n          [name]: newValue,\n        });\n        if (name === 'fontSize') {\n          this.setState({\n            currentAnimation: this.getAnimationList(newValue)[direction],\n          });\n        }\n      };\n\n      const decrease = () => {\n        const { [name]: prev, direction } = this.state;\n        const newValue = prev > lowLimit + 1 ? prev - 1 : lowLimit;\n        this.setState({\n          [name]: newValue,\n        });\n        if (name === 'fontSize') {\n          this.setState({\n            currentAnimation: this.getAnimationList(newValue)[direction],\n          });\n        }\n      };\n\n      if (reverse) {\n        App.prototype[`${name}Inc`] = decrease;\n        App.prototype[`${name}Dec`] = increase;\n      } else {\n        App.prototype[`${name}Inc`] = increase;\n        App.prototype[`${name}Dec`] = decrease;\n      }\n    });\n\n    this.state = makeState;\n  }\n\n  getDefaultPlayerHeight = () => DEFAULT_PLAYER_HEIGHT;\n\n  getIncButtunList = () => [\n    {\n      id: 0,\n      name: 'fontSize',\n      defaultVal: DEFAULT_FONT_SIZE,\n      lowLimit: 1,\n      highLimit: 100,\n      reverse: false,\n    },\n    {\n      id: 1,\n      name: 'speed',\n      defaultVal: 10,\n      lowLimit: 1,\n      highLimit: 100,\n      reverse: true,\n    },\n  ];\n\n  getAnimationList = (fontSize = DEFAULT_FONT_SIZE) => {\n    const heightMiddle = (DEFAULT_PLAYER_HEIGHT - fontSize) / 2;\n\n    return {\n      up: [\n        { transform: `translateY(${DEFAULT_PLAYER_HEIGHT}rem)` },\n        { transform: `translateY(${heightMiddle}rem)`, offset: 0.3 },\n        { transform: `translateY(${heightMiddle}rem)`, offset: 0.6 },\n        { transform: `translateY(-${DEFAULT_PLAYER_HEIGHT}rem)` },\n      ],\n      down: [\n        { transform: `translateY(-${DEFAULT_PLAYER_HEIGHT}rem)` },\n        { transform: `translateY(${heightMiddle}rem)`, offset: 0.3 },\n        { transform: `translateY(${heightMiddle}rem)`, offset: 0.6 },\n        { transform: `translateY(${DEFAULT_PLAYER_HEIGHT}rem)` },\n      ],\n      right: [\n        { transform: `translate(-100%, ${heightMiddle}rem)` },\n        { transform: `translate(0%, ${heightMiddle}rem)`, offset: 0.3 },\n        { transform: `translate(0%, ${heightMiddle}rem)`, offset: 0.6 },\n        { transform: `translate(100%, ${heightMiddle}rem)` },\n      ],\n      left: [\n        { transform: `translate(100%, ${heightMiddle}rem)` },\n        { transform: `translate(0%, ${heightMiddle}rem)`, offset: 0.3 },\n        { transform: `translate(0%, ${heightMiddle}rem)`, offset: 0.6 },\n        { transform: `translate(-100%, ${heightMiddle}rem)` },\n      ],\n    };\n  }\n\n  directionChange = (event) => {\n    const { fontSize } = this.state;\n\n    this.setState({ direction: event.target.value });\n    this.setState({\n      currentAnimation: this.getAnimationList(fontSize)[event.target.value],\n    });\n  };\n\n  textChange = (event) => {\n    this.setState({ textState: event.target.value });\n  };\n\n  colorChange = (color) => {\n    this.setState({ colorState: color.hex });\n  };\n\n  downloadJSON = () => {\n    const data = JSON.stringify({ text: 'work' }, null, 4);\n    download(data, 'newText.json');\n  }\n\n  render() {\n    const {\n      currentAnimation,\n      direction,\n      textState,\n      colorState,\n    } = this.state;\n    const playerProps = { };\n\n    this.getIncButtunList().forEach((bt) => {\n      const { name } = bt;\n      const { [name]: btState } = this.state;\n      playerProps[name] = btState;\n    });\n\n    const IncButtonComponents = this.getIncButtunList().map(bt => (<IncButton\n      key={bt.id}\n      name={bt.name}\n      className={bt.name}\n      increase={App.prototype[`${bt.name}Inc`]}\n      decrease={App.prototype[`${bt.name}Dec`]}\n    />\n    ));\n\n    return (\n      <div className=\"App\">\n        <Player\n          className=\"player\"\n          text={textState}\n          backgroundColor=\"black\"\n          color={colorState}\n          height={String(DEFAULT_PLAYER_HEIGHT)}\n          direction=\"left\"\n          animation={currentAnimation}\n          {...playerProps}\n        />\n        {this.isPlayerMode() ? (<div />) : (\n          <div>\n            <Button variant=\"contained\" className=\"download\" onClick={this.downloadJSON}>\n              DOWNLOAD\n            </Button>\n            <SwatchesPicker\n              className=\"colorInput\"\n              onChangeComplete={this.colorChange}\n            />\n            <TextField\n              label=\"Text Input\"\n              className=\"textInput\"\n              value={textState}\n              onChange={this.textChange}\n              margin=\"normal\"\n              fullWidth\n            />\n            <DirectionButton\n              name=\"Direction\"\n              keys={Object.keys(this.getAnimationList())}\n              direction={direction}\n              handleChange={this.directionChange}\n            />\n            {IncButtonComponents}\n          </div>)}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}